# This file defines the default layout of the printer's menu.

# It is not necessary to edit this file to change the menu. Instead,
# one may override any of the sections defined here by defining a
# section with the same name in the main printer.cfg config file.

### DEFAULT MENU ###
# Main
#   + Tune
#       + Speed: 000%
#       + Flow: 000%
#       + Offset Z:00.00
#   + OctoPrint
#       + Pause printing
#       + Resume printing
#       + Abort printing
#   + SD Card
#       + Start printing
#       + Resume printing
#       + Pause printing
#       + Cancel printing
#       + ... (files)
#   + Control
#       + Home All
#       + Home Z
#       + Home X/Y
#       + Z Tilt
#       + Quad Gantry Lvl
#       + Bed Mesh
#       + Steppers off
#       + Fan: OFF
#       + Fan speed: 000%
#       + Lights: OFF
#       + Lights: 000%
#       + Move 10mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#       + Move 1mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#       + Move 0.1mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#   + Temperature
#       + Ex0:000 (0000)
#       + Ex1:000 (0000)
#       + Bed:000 (0000)
#       + Preheat PLA
#           + Preheat all
#           + Preheat hotend
#           + Preheat hotbed
#       + Preheat ABS
#           + Preheat all
#           + Preheat hotend
#           + Preheat hotbed
#       + Cooldown
#           + Cooldown all
#           + Cooldown hotend
#           + Cooldown hotbed
#   + Filament
#       + Ex0:000 (0000)
#       + Load Fil. fast
#       + Load Fil. slow
#       + Unload Fil.fast
#       + Unload Fil.slow
#       + Feed: 000.0
#   + Setup
#       + Save config
#       + Restart
#           + Restart host
#           + Restart FW
#       + PID tuning
#           + Tune Hotend PID
#           + Tune Hotbed PID
#       + Calibration
#           + Delta cal. auto
#           + Delta cal. man
#               + Start probing
#               + Move Z: 000.00
#               + Test Z: ++
#               + Accept
#               + Abort
#           + Bed probe
#       + Dump parameters
[menu __main __IP]
type: command
name: {"IP:%s " % (printer.display_status.ip)}

### menu main ###
[menu __main]
type: list
name: {% set svv = printer.save_variables.variables %}
	{% if svv.lcd_language == "chinese" %}
		~zhu~~cai~~dan~
  	{% else %}
   		Main
     		{% endif %}

[menu __main __resume]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "paused"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~hui~~fu~~da~~yin~
        {% else %}
			Resume printing
		{% endif %}
gcode:
    {% if "pause_resume" in printer %}
        RESUME
    {% else %}
        M24
    {% endif %}
    {menu.exit()}
[menu __main __pause]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~zan~~ting~~da~~yin~
		{% else %}
			Pause printing
		{% endif %}
gcode:
    {% if "pause_resume" in printer %}
        PAUSE
    {% else %}
        M25
    {% endif %}
    {menu.exit()}
[menu __main __cancel]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~qu~~xiao~~da~~yin~
		{% else %}
			Cancel printing
		{% endif %}
gcode:
    {% if 'pause_resume' in printer %}
        CANCEL_PRINT
    {% else %}
        M25
        M27
        M26 S0
        TURN_OFF_HEATERS
        {% if printer.toolhead.position.z <= printer.toolhead.axis_maximum.z - 5 %}
            G91
            G0 Z5 F1000
            G90
        {% endif %}
    {% endif %}
    {menu.exit()}
### menu tune ###
[menu __main __tune]
type: list
enable: {printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
  		~tiao~~zheng~
    		{% else %}
      			Tune
	 	{% endif %}

[menu __main __tune __speed]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~su~~du~: {'%3d' % (menu.input*100)}%
		{% else %}
			Speed: {'%3d' % (menu.input*100)}%
		{% endif %}
input: {printer.gcode_move.speed_factor}
input_min: 0.01
input_max: 5
input_step: 0.01
realtime: True
gcode:
    M220 S{'%d' % (menu.input*100)}

[menu __main __tune __flow]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~liu~~liang~: {'%3d' % (menu.input*100)}%
		{% else %}
			Flow: {'%3d' % (menu.input*100)}%
		{% endif %}
input: {printer.gcode_move.extrude_factor}
input_min: 0.01
input_max: 2
input_step: 0.01
realtime: True
gcode:
    M221 S{'%d' % (menu.input*100)}

[menu __main __tune __offsetz]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			Z~pian~~yi~:{'%05.3f' % menu.input}
		{% else %}
			Offset Z:{'%05.3f' % menu.input}
		{% endif %}
input: {printer.gcode_move.homing_origin.z}
input_min: -5
input_max: 5
input_step: 0.005
realtime: True
gcode:
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1


### menu level ###
[menu __main __level]
type: list
enable: {not printer.idle_timeout.state == "Printing" }
#name: {% if printer.configfile.config.display.lang == "chinese" %}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
          ~tiao~~ping~
		{% else %}
	      Level
		{% endif %}



[menu __main __level __z_offset]
type: list
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			Z~pian~~yi~
		{% else %}
			Z offset
		{% endif %}

[menu __main __level __z_offset __probe]
type: command
enable: {not printer.idle_timeout.state == "Printing" }
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~tan~~zhen~
		{% else %}
			Probe
		{% endif %}
gcode:
      G29 
      
[menu __main __level __z_offset __zmove]
type: list
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Z 
		{% else %}
			Z Move
		{% endif %}
		
[menu __main __level __z_offset __zmove __-1]
type: command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Z:-1  
		{% else %}
			Z Move:-1 
		{% endif %}
gcode:
        TESTZ Z=-1
        
[menu __main __level __z_offset __zmove __-0.1]
type:  command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Z:-0.1  
		{% else %}
			Z Move:-0.1 
		{% endif %} 
gcode:
        TESTZ Z=-0.1       
        
[menu __main __level __z_offset __zmove __-0.01]
type:  command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Z:-0.01
		{% else %}
			Z Move:-0.01 
		{% endif %}
gcode:
        TESTZ Z=-0.01
        
[menu __main __level __z_offset __zmove __+1]
type: command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Z:+1
		{% else %}
			Z Move:+1 
		{% endif %}
gcode:
        TESTZ Z=1
        
[menu __main __level __z_offset __zmove __+0.1]
type:  command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Z:+0.1
		{% else %}
			Z Move:+0.1 
		{% endif %}
gcode:
        TESTZ Z=0.1
        
[menu __main __level __z_offset __zmove __+0.01]
type:  command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Z:+0.01
		{% else %}
			Z Move:+0.01 
		{% endif %}
gcode:
        TESTZ Z=0.01                
       
[menu __main __level __z_offset __zmove __save]
type: command
enable: {not printer.idle_timeout.state == "Printing" }
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~bao~~cun~
		{% else %}
			Save
		{% endif %}
gcode:
      accept
      save_config       
       
[menu __main __level __bed_mesh_calibrate]
type: command
enable: {not printer.idle_timeout.state == "Printing"} 
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~zi~~dong~~tiao~~ping~
		{% else %}
			Auto Level
		{% endif %}
gcode:
      G30
[menu __main __input_shaper]
type: command
enable: {not printer.idle_timeout.state == "Printing"} 
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~shu~~ru~~zheng~~xing~
		{% else %}
			Input Shaper
		{% endif %}
gcode:
      G40

[menu __main __language]
type: list
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yu~~yan~
		{% else %}
			Language
		{% endif %}

[menu __main __language __en]
lang_sel:english
type: command
name: English
gcode: SAVE_VARIABLE VARIABLE=lcd_language VALUE='"english"'
		{menu.exit()}

[menu __main __language __ch]
lang_sel:chinese
type: command
name: ~zhong~~wen2~
gcode: SAVE_VARIABLE VARIABLE=lcd_language VALUE='"chinese"'
		{menu.exit()}


### menu virtual sdcard ###
[menu __main __Print]
type: list
enable: {not printer.idle_timeout.state == "Printing"} 
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~da~~yin~
		{% else %}
			Print
		{% endif %}

[menu __main __Print __sdcard]
type: vsdlist
enable: {('virtual_sdcard' in printer)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~xi~~tong~
		{% else %}
			System
		{% endif %}
		
[menu __main __Print __usb]
type: usblist
###enable: {('virtual_sdcard' in printer)}
name: USB


[menu __main  __Print __sdcard __resume]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "paused"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~hui~~fu~~da~~yin~
		{% else %}
			Resume printing
		{% endif %}
gcode:
    {% if "pause_resume" in printer %}
        RESUME
    {% else %}
        M24
    {% endif %}
    {menu.exit()}

[menu __main __Print __sdcard __pause]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~zan~~ting~~da~yin~
		{% else %}
			Pause printing
		{% endif %}
gcode:
    {% if "pause_resume" in printer %}
        PAUSE
    {% else %}
        M25
    {% endif %}
    {menu.exit()}
[menu __main __Print __sdcard __cancel]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~qu~~xiao~~da~yin~
		{% else %}
			Cancel printing
		{% endif %}
gcode:
    {% if 'pause_resume' in printer %}
        CANCEL_PRINT
    {% else %}
        M25
        M27
        M26 S0
        TURN_OFF_HEATERS
        {% if printer.toolhead.position.z <= printer.toolhead.axis_maximum.z - 5 %}
            G91
            G0 Z5 F1000
            G90
        {% endif %}
    {% endif %}
    {menu.exit()}
### menu control ###
[menu __main __control]
type: list
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~kong~~zhi~
		{% else %}
			Control
		{% endif %}

[menu __main __control __home]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~quan~~bu~~hui2~~ling~
		{% else %}
			Home all
		{% endif %}
gcode: G28

[menu __main __control __homez]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			Z~hui2~~ling~
		{% else %}
			Home Z
		{% endif %}
gcode: G28 Z

[menu __main __control __homexy]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			X/Y~hui2~~ling~
		{% else %}
			Home XY
		{% endif %}
gcode: G28 X Y

[menu __main __control __z_tilt]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('z_tilt' in printer)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~tiao~~zheng~Z~pian~~yi~
		{% else %}
			Z tilt
		{% endif %}
gcode: Z_TILT_ADJUST

[menu __main __control __quad_gantry_level]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('quad_gantry_level' in printer)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~long~~men~~jia~~tiao~~ping~
		{% else %}
			Quad Gantry Lvl
		{% endif %}
gcode: QUAD_GANTRY_LEVEL

[menu __main __control __bed_mesh]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('bed_mesh' in printer)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~re~~chuang~~tiao~~ping~
		{% else %}
			Bed Mesh
		{% endif %}
gcode: BED_MESH_CALIBRATE

[menu __main __control __disable]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~guan~~bi~~dian~~ji2~
		{% else %}
			Steppers off
		{% endif %}
gcode:
    M84
    M18

[menu __main __control __fanonoff]
type: input
enable: {'fan' in printer}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~feng~~shan~: {'~da~~kai~ ' if menu.input else '~guan~~bi~'}
		{% else %}
			Fan: {'ON ' if menu.input else 'OFF'}
		{% endif %}
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 1
gcode:
    M106 S{255 if menu.input else 0}

[menu __main __control __fanspeed]
type: input
enable: {'fan' in printer}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~feng~~shan~~su~~du~: {'%3d' % (menu.input*100)}%
		{% else %}
			Fan speed: {'%3d' % (menu.input*100)}%
		{% endif %}
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M106 S{'%d' % (menu.input*255)}

[menu __main __control __caselightonoff]
type: input
enable: {'output_pin caselight' in printer}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~deng~~guang~: {'~da~~kai~ ' if menu.input else '~guan~~bi~'}
		{% else %}
			Lights: {'ON ' if menu.input else 'OFF'}
		{% endif %}
input: {printer['output_pin caselight'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_PIN PIN=caselight VALUE={1 if menu.input else 0}

[menu __main __control __caselightpwm]
type: input
enable: {'output_pin caselight' in printer}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~liang~~du~: {'%3d' % (menu.input*100)}%
		{% else %}
			Lights: {'%3d' % (menu.input*100)}%
		{% endif %}
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.01
gcode:
    SET_PIN PIN=caselight VALUE={menu.input}

### menu move 10mm ###
[menu __main __control __move_10mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~10mm
		{% else %}
			Move 10mm
		{% endif %}

[menu __main __control __move_10mm __axis_x]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~X:{'%05.1f' % menu.input}
		{% else %}
			Move X:{'%05.1f' % menu.input}
		{% endif %}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_y]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Y:{'%05.1f' % menu.input}
		{% else %}
			Move Y:{'%05.1f' % menu.input}
		{% endif %}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Z:{'%05.1f' % menu.input}
		{% else %}
			Move Z:{'%05.1f' % menu.input}
		{% endif %}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_10mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~E:{'%05.1f' % menu.input}
		{% else %}
			Move E:{'%+06.1f' % menu.input}
		{% endif %}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu move 1mm ###
[menu __main __control __move_1mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~1mm
		{% else %}
			Move 1mm
		{% endif %}

[menu __main __control __move_1mm __axis_x]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~X:{'%05.1f' % menu.input}
		{% else %}
			Move X:{'%05.1f' % menu.input}
		{% endif %}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_y]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Y:{'%05.1f' % menu.input}
		{% else %}
			Move Y:{'%05.1f' % menu.input}
		{% endif %}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Z:{'%05.1f' % menu.input}
		{% else %}
			Move Z:{'%05.1f' % menu.input}
		{% endif %}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_1mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~E:{'%05.1f' % menu.input}
		{% else %}
			Move E:{'%05.1f' % menu.input}
		{% endif %}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu move 0.1mm ###
[menu __main __control __move_01mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~0.1mm
		{% else %}
			Move 0.1mm
		{% endif %}

[menu __main __control __move_01mm __axis_x]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~X:{'%05.1f' % menu.input}
		{% else %}
			Move X:{'%05.1f' % menu.input}
		{% endif %}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_y]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Y:{'%05.1f' % menu.input}
		{% else %}
			Move Y:{'%05.1f' % menu.input}
		{% endif %}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Z:{'%05.1f' % menu.input}
		{% else %}
			Move Z:{'%05.1f' % menu.input}
		{% endif %}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __main __control __move_01mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~E:{'%05.1f' % menu.input}
		{% else %}
			Move E:{'%05.1f' % menu.input}
		{% endif %}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu temperature ###
[menu __main __temp]
type: list
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~wen~~du~
		{% else %}
			Temperature
		{% endif %}

[menu __main __temp __hotend0_target]
type: input
enable: {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~ji~~chu~{"0:%3.0f(%4.0f)" % (menu.input, printer.extruder.temperature)}
		{% else %}
			{"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
		{% endif %}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 T0 S{'%.0f' % menu.input}

[menu __main __temp __hotend1_target]
type: input
enable: {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~ji~~chu~{"1:%3.0f(%4.0f)" % (menu.input, printer.extruder1.temperature)}
		{% else %}
			{"Ex1:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
		{% endif %}
input: {printer.extruder1.target}
input_min: 0
input_max: {printer.configfile.config.extruder1.max_temp}
input_step: 1
gcode: M104 T1 S{'%.0f' % menu.input}

[menu __main __temp __hotbed_target]
type: input
enable: {'heater_bed' in printer}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~re~~chuang~{":%3.0f(%4.0f)" % (menu.input, printer.heater_bed.temperature)}
		{% else %}
			{"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
		{% endif %}
input: {printer.heater_bed.target}
input_min: 0
input_max: {printer.configfile.config.heater_bed.max_temp}
input_step: 1
gcode: M140 S{'%.0f' % menu.input}

[menu __main __temp __preheat_pla]
type: list
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yu2~~re~PLA
		{% else %}
			Preheat PLA
		{% endif %}

[menu __main __temp __preheat_pla __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yu2~~re~~quan~~bu~
		{% else %}
			Preheat all
		{% endif %}
gcode:
    M140 S60
    M104 S200

[menu __main __temp __preheat_pla __hotend]
type: command
enable: {'extruder' in printer}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yu2~~re~~jia2~~re~~tou~
		{% else %}
			Preheat hotend
		{% endif %}
gcode: M104 S200

[menu __main __temp __preheat_pla __hotbed]
type: command
enable: {'heater_bed' in printer}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yu2~~re~~re~~chuang~
		{% else %}
			Preheat hotbed
		{% endif %}
gcode: M140 S60

[menu __main __temp __preheat_abs]
type: list
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yu2~~re~ABS
		{% else %}
			Preheat ABS
		{% endif %}

[menu __main __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name:  {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yu2~~re~~quan~~bu~
		{% else %}
			Preheat all
		{% endif %}
gcode:
    M140 S110
    M104 S245

[menu __main __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yu2~~re~~jia2~~re~~tou~
		{% else %}
			Preheat hotend
		{% endif %}
gcode: M104 S245

[menu __main __temp __preheat_abs __hotbed]
type: command
enable: {'heater_bed' in printer}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yu2~~re~~re~~chuang~
		{% else %}
			Preheat hotbed
		{% endif %}
gcode: M140 S110

[menu __main __temp __cooldown]
type: list
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~leng~~que~
		{% else %}
			Cooldown
		{% endif %}

[menu __main __temp __cooldown __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~leng~~que~~quan~~bu~
		{% else %}
			Cooldown all
		{% endif %}
gcode:
    M104 S0
    M140 S0

[menu __main __temp __cooldown __hotend]
type: command
enable: {'extruder' in printer}
name:{% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~leng~~que~~jia2~~re~~tou~
		{% else %}
			Cooldown hotend
		{% endif %}
gcode: M104 S0

[menu __main __temp __cooldown __hotbed]
type: command
enable: {'heater_bed' in printer}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~leng~~que~~re~~chuang~
		{% else %}
			Cooldown hotbed
		{% endif %}
gcode: M140 S0

### menu filament ###

[menu __main __filament]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~ji~~chu~
		{% else %}
			Filament
		{% endif %}

[menu __main __filament __hotend0_target]
type: input
enable: {'extruder' in printer}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~ji~~chu~{"0:%3.0f(%4.0f)" % (menu.input, printer.extruder.temperature)}
		{% else %}
			{"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
		{% endif %}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 T0 S{'%.0f' % menu.input}

[menu __main __filament __loadf]
type: command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~kuai~~su~~jin~~liao~
		{% else %}
			Load Fil. fast
		{% endif %}
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E50 F960
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __loads]
type: command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~man~~su~~jin~~liao~
		{% else %}
			Load Fil. slow
		{% endif %}
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E50 F240
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloadf]
type: command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~kuai~~su~~tui~~liao~
		{% else %}
			Unload Fil.fast
		{% endif %}
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E-50 F960
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloads]
type: command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~man~~su~~tui~~liao~
		{% else %}
			Unload Fil.slow
		{% endif %}
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E-50 F240
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __feed]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~su~~du~: {'%.1f' % menu.input}
		{% else %}
			Feed: {'%.1f' % menu.input}
		{% endif %}
input: 5
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E{'%.1f' % menu.input} F60
    RESTORE_GCODE_STATE NAME=__filament__load

### menu setup ###
[menu __main __setup]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~she~~zhi2~
		{% else %}
			Setup
		{% endif %}

[menu __main __setup __save_config]
type: command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~bao~~cun~~pei~~zhi2~
		{% else %}
			Save config
		{% endif %}
gcode: SAVE_CONFIG

[menu __main __setup __restart]
type: list
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~chong~~qi~
		{% else %}
			Restart
		{% endif %}

[menu __main __setup __restart __host_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~chong~~qi~~zhu~~ji2~
		{% else %}
			Restart host
		{% endif %}
gcode: RESTART

[menu __main __setup __restart __firmware_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~chong~~qi~~gu~~jian~
		{% else %}
			Restart FW
		{% endif %}
gcode: FIRMWARE_RESTART

[menu __main __setup __tuning]
type: list
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~tiao~~zheng~PID
		{% else %}
			PID tuning
		{% endif %}

[menu __main __setup __tuning __hotend_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('extruder' in printer)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~tiao~~zheng~~jia2~~re~~tou~PID
		{% else %}
			Tune Hotend PID
		{% endif %}
gcode: PID_CALIBRATE HEATER=extruder TARGET=210 WRITE_FILE=1

[menu __main __setup __tuning __hotbed_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~tiao~~zheng~~re~~chuang~PID
		{% else %}
			Tune Hotbed PID
		{% endif %}
gcode: PID_CALIBRATE HEATER=heater_bed TARGET=60 WRITE_FILE=1

[menu __main __setup __calib]
type: list
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~tiao~~ping~
		{% else %}
			Calibration
		{% endif %}

[menu __main __setup __calib __delta_calib_auto]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('delta_calibrate' in printer)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~san~~jiao~~zhou~~zi~~dong~~tiao~~ping~
		{% else %}
			Delta cal. auto
		{% endif %}
gcode:
    G28
    DELTA_CALIBRATE

[menu __main __setup __calib __delta_calib_man]
type: list
enable: {(not printer.idle_timeout.state == "Printing") and ('delta_calibrate' in printer)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~san~~jiao~~zhou~~shou~~dong~~tiao~~ping~
		{% else %}
			Delta cal. man
		{% endif %}

[menu __main __setup __calib __bedprobe]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('probe' in printer)}
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~re~~chuang~~tan~~zhen~
		{% else %}
			Bed probe
		{% endif %}
gcode: PROBE

[menu __main __setup __calib __delta_calib_man __start]
type: command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~kai~~shi~~tiao~~ping~
		{% else %}
			Start probing
		{% endif %}
gcode:
    G28
    DELTA_CALIBRATE METHOD=manual

[menu __main __setup __calib __delta_calib_man __move_z]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~yi~~dong~Z: {'%03.2f' % menu.input}
		{% else %}
			Move Z: {'%03.2f' % menu.input}
		{% endif %}
input: {printer.gcode_move.gcode_position.z}
input_step: 1
realtime: True
gcode:
    {%- if menu.event == 'change' -%}
        G1 Z{'%.2f' % menu.input}
    {%- elif menu.event == 'long_click' -%}
        G1 Z{'%.2f' % menu.input}
        SAVE_GCODE_STATE NAME=__move__axis
        G91
        G1 Z2
        G1 Z-2
        RESTORE_GCODE_STATE NAME=__move__axis
    {%- endif -%}

[menu __main __setup __calib __delta_calib_man __test_z]
type: input
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~ce~~shi~~Z: {['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
		{% else %}
			Test Z: {['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
		{% endif %}
input: 6
input_min: 0
input_max: 11
input_step: 1
gcode:
    {%- if menu.event == 'long_click' -%}
        TESTZ Z={['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
    {%- endif -%}

[menu __main __setup __calib __delta_calib_man __accept]
type: command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~jie~~shou~
		{% else %}
			Accept
		{% endif %}
gcode: ACCEPT

[menu __main __setup __calib __delta_calib_man __abort]
type: command
name: {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~tui~~chu~
		{% else %}
			Abort
		{% endif %}
gcode: ABORT

[menu __main __setup __dump]
type: command
name:  {% set svv = printer.save_variables.variables %}
		{% if svv.lcd_language == "chinese" %}
			~pao~~chu~~can~~shu2~
		{% else %}
			Dump parameters
		{% endif %}
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s"
                               % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}
